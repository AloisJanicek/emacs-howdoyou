#+STARTUP:    align fold hidestars oddeven indent 
* DONE parse SO link
* DONE use async await lib
https://nullprogram.com/blog/2019/03/10/
this one is hard
use promise.el instead
* DONE pretty print the dom 
travese the dom tree and print the code part in side done

org template and find the code type to highlight
each will have tag use the tag 

* DONE next and previous link
local buffer var
no, just a global state is ok 
because you will have a singleton *How Dou You* buffer
* DONE insert link also
done
#+begin_example

#+end_example
* DONE parse link and retain img
query ubuntu disk partition

done but not good
now the lines are long and double white spaces

how about modify the dom directly
* DONE dom is just a tree 
walk this dom and if it's an a tag, replace it* dom is just a tree 

(pre nil (code nil int x; x = 10;))
* DONE manipulate dom all in one
to drop the insert example org
* DONE print 3 answers and scores
* DONE show only first answer, collapse other
* DONE better error handle
uncompressing publicsuffix.txt.gz...done

* DONE image inside a tag should be ignore
* DONE include question title
class: question-hyperlink
* TODO packaging
* DONE user agent
test url
https://www.google.com/search?q=curl%20 what ever

working with user agent:
curl -A "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0" https://www.google.com/search?q=curl

without, die
curl 'https://www.google.com/search?q=curl'

when you call withou user agent google will show different pages to you, 
the trick (dom-by-class dom "jfp3ef") will only work on this case.

because of this it can figure out you're not using a browser and ban you later

* TODO use curl 
directly use of curl is hard, use request which is an abtraction over curl
* bug parsing
query: elisp check if buffers are the same 
links https://stackoverflow.com/questions/586735/how-can-i-check-if-a-current-buffer-exists-in-emacs

eval triggered:

catch the error: (wrong-type-argument symbolp 
(get-buffer name)

Return the buffer named name (a string).
If there is no live buffer named name, return nil.
name may also be a buffer; if so, the value is that buffer.

(get-buffer-create name)

Return the buffer named name, or create such a buffer and return it.
A new buffer is created if there is no live buffer named name.
If name starts with a space, the new buffer does not keep undo information.
If name is a buffer instead of a string, then it is the value returned.
The value is never nil.
)

probably when code sections look like lisp code

#+begin_src 
(pre nil #+begin_example  emacs 
 ((code nil (if (buffer-exists "my-buffer-name")
    ; do something
 )
)) 
#+end_example)
#+end_src


#+begin_src 
(pre nil #+begin_example  emacs 
 (code nil (if (buffer-exists "my-buffer-name")
    ; do something
 )
) #+end_example)
#+end_src

bug was due to returning double pathenthese which shr-insert-document will complain
#+begin_example
`(pre nil "#+begin_example " ,howdoyou--current-lang "\n" ,(nthcdr 2 it) "\n#+end_example"))
=> (pre nil #begin... ((code nil ...)) #end..)

(append `(pre nil "#+begin_example " ,howdoyou--current-lang "\n") (nthcdr 2 it) '("#+end_example")))
=> (pre nil #begin... (code nil ...) #end..)
#+end_example
